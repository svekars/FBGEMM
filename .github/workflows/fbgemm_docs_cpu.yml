# This workflow builds the fbgemm_gpu docs and deploys them to gh-pages.
name: Generate documentation
on:
  push:
    branches:
      - main
jobs:
  build_docs_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    # Update references
    # TODO: update the git submodule sync after we fixed the auto-sync part
    - name: Git Sumbodule Update
      run: |
        git submodule init
        git submodule update --remote --recursive
        git log
    - name: Update pip
      run: |
        sudo apt-get install git python3-pip
        sudo pip3 install --upgrade pip
    - name: Setup conda
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        bash ~/miniconda.sh -b -p $HOME/miniconda
    - name: setup Path
      run: |
        echo "/home/ec2-user/miniconda/bin" >> $GITHUB_PATH
        echo "CONDA=/home/ec2-user/miniconda" >> $GITHUB_PATH
    - name: create conda env
      run: |
        conda create --name build_binary python=3.9
        conda info
    - name: check python version
      run: |
        conda run -n build_binary python --version
    - name: Install gcc
      shell: bash
      run: |
        conda run -n build_binary sudo apt update
        conda run -n build_binary sudo apt install build-essential
    - name: Setup Path
      run: |
        echo /usr/local/bin >> $GITHUB_PATH
    - name: Install Dependencies
      run: |
        conda run -n build_binary conda install pytorch cudatoolkit=11.3 -c pytorch-nightly
    - name: setup CUDA Path
      run: |
        echo /usr/local/cuda-11.3/bin >> $GITHUB_PATH
        echo /usr/local/bin >> $GITHUB_PATH
    - name: Install fbgemm_gpu/requirements.txt
      shell: bash
      run: |
        cd fbgemm_gpu
        conda run -n build_binary python -m pip install -r requirements.txt
    - name: Test PyTorch Installation
      run: |
        conda run -n build_binary python -c "import torch.distributed"
        echo "torch.distributed succeeded"
    - name: Test Installation of dependencies
      run: |
        cd fbgemm_gpu/
        conda run -n build_binary python -c "import torch.distributed"
        echo "torch.distributed succeeded"
        conda run -n build_binary python -c "import skbuild"
        echo "skbuild succeeded"
        conda run -n build_binary python -c "import numpy"
        echo "numpy succeeded"
    - name: Build fbgemm_gpu_ cpu-only
      run: |
        cd fbgemm_gpu/
        rm -r dist || true 
        conda run -n build_binary \
          python setup.py bdist_wheel \
          --package_name fbgemm_gpu_nightly-cpu \
          --cpu_only \
          --python-tag=3.9
          --plat-name=manylinux1_x86_64
        ls -lt dist/*.whl
    - name: Install fbgemm_gpu
      run: |
        conda run -n build_binary python -m pip install fbgemm_gpu/dist/fbgemm_gpu_nightly_cpu-*.whl
    - name: Test fbgemm_gpu installation
      shell: bash
      run: |
        conda run -n build_binary \
          python -c "import fbgemm_gpu"
    - name: Build the docset
      run: |
        conda run -n build_binary python -m pip install -r fbgemm_gpu/docs/requirements.txt
        cd ./fbgemm_gpu/docs
        conda run -n build_binary make html
        cd ..
    - name: Get output time
      run: echo "The time was ${{ steps.build.outputs.time }}"
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: ./fbgemm_gpu/docs/build/html # The folder the action should deploy.
